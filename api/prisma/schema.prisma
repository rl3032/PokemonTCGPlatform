// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int      @id @default(autoincrement())
  email        String   @unique
  auth0Id      String   @unique @default("")
  name         String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}


model Card {
  id              String    @id
  name            String
  stage           String?
  hp              Int?
  types           String[]
  abilities       Ability[]
  attacks         Attack[]
  weakness        String?
  resistance      String?
  retreatCost     Int
  artist          String?
  rarity          String
  set             Set      @relation(fields: [setId], references: [id])
  setId           String
  number          String
  regulationMark  String?
  legalities      Legalities
  prices          Price
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}


model UserCard {
  userId    Int
  user      User    @relation(fields: [userId], references: [id])
  cardId    String
  card      Card    @relation(fields: [cardId], references: [id])
  
  @@id([userId, cardId])
}


model Ability {
  id        String  @id @default(uuid())
  name      String
  effect    String
  cardId    String
  card      Card    @relation(fields: [cardId], references: [id])
}

model Attack {
  id          String  @id @default(uuid())
  name        String
  cost        String[]
  damage      String?
  effect      String?
  cardId      String
  card        Card    @relation(fields: [cardId], references: [id])
}

model Set {
  id        String  @id
  name      String
  series    String
  total     Int
  cards     Card[]
}

model Legalities {
  id           String   @id @default(uuid())
  cardId       String
  card         Card     @relation(fields: [cardId], references: [id])
  standard     Boolean
  expanded     Boolean
  unlimited    Boolean
}

model Price {
  id          String  @id @default(uuid())
  cardId      String
  card        Card    @relation(fields: [cardId], references: [id])
  market      Float?
  low         Float?
  mid         Float?
  high        Float?
  trend       Float?
}
